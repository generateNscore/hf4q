"var argsFromMain=null;\nfunction init(prms) {argsFromMain=prms;}\n//init();\nif (argsFromMain == null) {argsFromMain=[[500, 1400], [10, 7], ['x', '8', '\u00f7', '3', '=', '6'], 'shuffle'];}\n\n[cnvs.height, cnvs.width]=argsFromMain[0];\nvar cw = cnvs.width, ch = cnvs.height, cells=[];\nconst cellW=50, [cols, rows]=argsFromMain[1];\ncnvs.height=Math.max(10, rows)*50+40; ch=cnvs.height;\ncnvs.height=(rows+1)*cellW; ch=cnvs.height;\nconst yTop=20.5, xLeft=20.5;\nconst eqn = argsFromMain[2];\nconst shuffling = argsFromMain[3];\nvar pxX, pxY, bbox, dragging=false, clickedChar=null;\n\nvar clickedValue=null;\nconst SubmitBtn={x:(cols+2)*cellW, y:40, w:140, h:50, color:\"#d7d\"};\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nvar arr = [], r4arr=[];\nif (shuffling == 'shuffle') {\n  var j=0, r;\n  while(arr.length < eqn.length){\n    r = getRandomInt(0, cols*rows);\n    if (r4arr.indexOf(r) == -1) {\n      arr.push({c: eqn[j], n: r, color:\"black\"});\n      r4arr.push(r);\n      j += 1;\n    }\n  }\n}\nelse {\n  for (let j=0; j<eqn.length; j++) {\n    arr.push({c: eqn[j], n:j});\n  }\n}\n\nvar canvasImage;\n\nfunction drawBackground() {\n  ctx.clearRect(0,0,cw,ch);\n\n  ctx.strokeStyle = \"#eee\";\n  var yBottom=yTop+rows*cellW, x, y;\n  for (let j=0; j<cols+1; j++) {\n    ctx.beginPath();\n    x=xLeft+j*cellW;\n    ctx.moveTo(x, yTop);\n    ctx.lineTo(x, yBottom);\n    ctx.stroke();\n  }\n  var xRight=xLeft+cols*cellW\n  for (let j=0; j<rows+1; j++) {\n    ctx.beginPath();\n    y = yTop+j*cellW;\n    ctx.moveTo(xLeft, y);\n    ctx.lineTo(xRight, y);\n    ctx.stroke();\n  }\n\n  if (shuffling == 'shuffle') {\n    ctx.beginPath();\n    ctx.shadowColor = \"black\";\n    ctx.shadowOffsetX = 1;\n    ctx.shadowOffsetY = 1;\n    ctx.shadowBlur = 3;\n    ctx.fillStyle=SubmitBtn.color;\n    ctx.fillRect(SubmitBtn.x-SubmitBtn.w/2,SubmitBtn.y-SubmitBtn.h/2,SubmitBtn.w,SubmitBtn.h);\n    ctx.shadowColor = \"transparent\";\n    ctx.fillStyle=\"black\"; ctx.font = \"28px arial\"; ctx.textAlign=\"center\"; \n    ctx.fillText(\"Submit\", SubmitBtn.x, SubmitBtn.y+10);\n    ctx.closePath();\n  }\n\n  canvasImage=ctx.getImageData(0,0,cw,ch);\n}\n\ndrawBackground();\n\n\nfunction trim(x) {\n  return x.replace(/^\\s+|\\s+$/gm, '');\n}\n\nfunction Submit() {\n  var ans=\"\";\n  var flag;\n  for (let n=0; n<cols*rows; n++) {\n    flag=null;\n    for (let j=0; j<arr.length; j++) {\n      if (arr[j].n == n) {\n        flag=j;\n        break;\n      }\n    }\n    if (flag == null) {ans += ' ';}\n    else {ans += arr[flag].c;}\n  }\n  answers[Qnumber]=trim(ans);\n  addAnswers2Textarea();\n}\n\nif (shuffling == 'shuffle') {\n  cnvs.addEventListener('mouseup', onmouseup);\n  cnvs.addEventListener('mousedown', onmousedown);\n  cnvs.addEventListener('mousemove', onmousemove);\n}\n\nfunction onmousedown(e) {\n  e.preventDefault();\n  bbox = cnvs.getBoundingClientRect();\n  pxX=e.clientX-bbox.left*(cw/bbox.width);\n  pxY=e.clientY-bbox.top*(ch/bbox.height);\n\n  if (SubmitBtn.x-SubmitBtn.w/2<=pxX && pxX <= SubmitBtn.x+SubmitBtn.w/2 && SubmitBtn.y-SubmitBtn.h/2<=pxY && pxY <= SubmitBtn.y+SubmitBtn.h/2) {Submit();}\n\n  if (pxX>20 && pxX<cols*cellW && pxY>20 && pxY<rows*cellW) {\n    clickedValue = getValue();\n    for (let j=0; j<arr.length; j++) {\n      if (arr[j].n == clickedValue) {\n        dragging=true;\n        clickedChar=j;\n        arr[clickedChar].color=\"#f00\";\n\n        ctx.beginPath();\n        ctx.font = \"36px arial\"; ctx.textAlign=\"center\";\n        const Rem = arr[clickedChar].n%cols, Quo = Math.floor((arr[clickedChar].n-Rem)/cols);\n        ctx.fillStyle=arr[clickedChar].color;\n        ctx.fillText(arr[clickedChar].c, Rem*cellW+45, Quo*cellW+60);\n\n        break;\n      }\n    }\n  }\n}\n\nfunction onmouseup(e) {\n  e.preventDefault();\n  bbox = cnvs.getBoundingClientRect();\n  pxX=e.clientX-bbox.left*(cw/bbox.width);\n  pxY=e.clientY-bbox.top*(ch/bbox.height);\n\n  if (dragging == true) {\n\n    arr[clickedChar].color=\"black\";\n\n    ctx.beginPath();\n    ctx.font = \"36px arial\"; ctx.textAlign=\"center\";\n    const Rem = arr[clickedChar].n%cols, Quo = Math.floor((arr[clickedChar].n-Rem)/cols);\n    ctx.fillStyle=arr[clickedChar].color;\n    ctx.fillText(arr[clickedChar].c, Rem*cellW+45, Quo*cellW+60);\n\n    clickedChar=null;\n\n    dragging=false;\n  }\n}\n\nfunction onmousemove(e) {\n  e.preventDefault();\n  bbox = cnvs.getBoundingClientRect();\n  pxX=e.clientX-bbox.left*(cw/bbox.width);\n  pxY=e.clientY-bbox.top*(ch/bbox.height);\n\n  if (dragging == true && pxX>20 && pxX<cols*cellW && pxY>20 && pxY<rows*cellW) {\n    clickedValue = getValue();\n    arr[clickedChar].n=clickedValue;\n    drawAll();\n  }\n}\n\nfunction getValue() {\n  let col=Math.floor((pxX-20)/cellW);\n  let row=Math.floor((pxY-20)/cellW);\n  return col+row*cols;\n}\n\nfunction drawAll() {\n  ctx.putImageData(canvasImage,0,0);\n\n  ctx.font = \"36px arial\"; ctx.textAlign=\"center\";\n  var Rem, Quo;\n  for (let j=0; j<arr.length; j++) {\n    Rem = arr[j].n%cols; Quo = Math.floor((arr[j].n-Rem)/cols);\n    ctx.beginPath(); ctx.fillStyle=arr[j].color;\n    ctx.fillText(arr[j].c, Rem*cellW+45, Quo*cellW+60);\n  }\n}\n\ndrawAll();"